package gmit.ie;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Random;

public class AddBug {
	private boolean exit = true;
	private int option;
	private String status;
	private WriteFile writer;

	public AddBug() {
		super();
		writer = new WriteFile();
	}

	public void addBug(ObjectOutputStream out, ObjectInputStream in,Employee employee,String fileName,Bug bug,String bugFile) throws ClassNotFoundException, IOException {
		do {
			String z = "000000";
			Random rand = new Random();
			String id = Integer.toString(rand.nextInt(0X1000000), 16);
			id = z.substring(id.length()) + id;
			System.out.println(id);

			sendMessage("Bug Name : ", out);
			String name = (String) in.readObject();
			System.out.println(name);

			sendMessage("Time and Date : ", out);
			String time = (String) in.readObject();
			System.out.println(time);

			sendMessage("Platform-OS : ", out);
			String platform = (String) in.readObject();
			System.out.println(platform);

			sendMessage("Problem Description : ", out);
			String problemDesc = (String) in.readObject();
			System.out.println(problemDesc);

			for (int i = 0; i < 1; i++) {
				sendMessage("Choose one of the following Status\n\t1. Open\n\t2. Assigned\n\t3. Closed", out);
				String s = (String) in.readObject();
				System.out.println(s);
				option = Integer.parseInt(s);
				if (option == 1) {
					status = "Open";
					System.out.println(status);
				} else if (option == 2) {
					for (int j = 0; j < 1; j++) {
						sendMessage("Enter the Engineer's ID : ", out);
						String engineerID = (String) in.readObject();
						boolean found = new EmployeeDetails().findDuplicateID(fileName, employee, engineerID);
						out.writeBoolean(found);
						out.flush();
						if(found) {
						status = "Assigned [ Engineer's ID : " + engineerID + " ]";
						System.out.println(status);
						}else {
							System.out.println("No Engineer Exists of ID : "+engineerID+". Try Again");
							j--;
						}
					}
				} else if (option == 3) {
					status = "Closed";
					System.out.println(status);
				} else {
					System.out.println("Wrong input. Try Again.");
					i--;
				}
			}
			
			bug=new Bug(id, name, time, platform, problemDesc, status);
			//write to file
			writer.writeBug(bugFile, bug);
			
			this.exit = false;
		} while (exit);
	}

	public void sendMessage(String message, ObjectOutputStream out) {
		try {
			out.writeObject(message);
			out.flush();
			System.out.println("Server Message -------> " + message);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
